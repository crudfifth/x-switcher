{"version":3,"file":"background.js","mappings":";;;;;AAAa;AACb;AACA;AACA,IAAI,IAAsC;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,IAAsC;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL","sources":["webpack://x-switcher/./src/background.ts"],"sourcesContent":["\"use strict\";\nconsole.log(\"Background script loaded\");\n// 開発モードなら 3 秒ごとに拡張機能をリロード\nif (process.env.NODE_ENV === \"development\") {\n    setInterval(() => {\n        console.log(\"Reloading extension...\");\n        chrome.runtime.reload();\n    }, 3000);\n}\nchrome.runtime.onInstalled.addListener(() => {\n    console.log(\"拡張機能がインストールまたは更新されました。\");\n});\n// 環境が開発なら 3 秒ごとに拡張機能をリロード（開発用）\nif (process.env.NODE_ENV === \"development\") {\n    setInterval(() => {\n        chrome.runtime.reload();\n    }, 3000);\n}\n// メッセージリスナー\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    console.log(\"[DEBUG] 受信メッセージ:\", message);\n    if (message.action === \"load_session\") {\n        loadSession(message.index);\n        sendResponse({ status: \"ok\" });\n        return true;\n    }\n});\n// セッションを復元する関数\nfunction loadSession(index) {\n    chrome.storage.local.get([\"accounts\"], (data) => {\n        const accounts = data.accounts || [];\n        if (index < 0 || index >= accounts.length) {\n            console.warn(\"無効なインデックス:\", index);\n            return;\n        }\n        const account = accounts[index];\n        console.log(`[DEBUG] セッションを復元: ${account.name}`);\n        for (const cookie of account.cookies) {\n            chrome.cookies.set({\n                url: \"https://x.com\",\n                name: cookie.name,\n                value: cookie.value,\n                domain: cookie.domain,\n                path: cookie.path,\n                secure: cookie.secure,\n                httpOnly: cookie.httpOnly,\n                sameSite: cookie.sameSite,\n                expirationDate: cookie.expirationDate,\n            });\n        }\n        console.log(\"[DEBUG] クッキーの復元完了\");\n    });\n}\n"],"names":[],"sourceRoot":""}