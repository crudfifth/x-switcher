{"version":3,"file":"popup.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,aAAa;AACjE,6CAA6C,+BAA+B;AAC5E;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D,2CAA2C,UAAU;AACrD;AACA,uCAAuC;AACvC,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC","sources":["webpack://x-switcher/./src/popup.ts"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const accountList = document.getElementById(\"account-list\");\n    const saveButton = document.getElementById(\"save-session\");\n    const exportButton = document.getElementById(\"export-data\");\n    const importButton = document.getElementById(\"import-data\");\n    const importFile = document.getElementById(\"import-file\");\n    const accountNameInput = document.getElementById(\"account-name\");\n    console.log(\"[DEBUG] DOMContentLoadedイベント発火\");\n    // ストレージからアカウントリスト取得\n    chrome.storage.local.get([\"accounts\"], (data) => {\n        const accounts = data.accounts || [];\n        console.log(\"[DEBUG] 読み込まれたアカウントリスト:\", accounts);\n        accounts.forEach((account, index) => {\n            const button = document.createElement(\"button\");\n            button.textContent = account.name;\n            button.classList.add(\"account-button\");\n            button.addEventListener(\"click\", () => {\n                console.log(`[DEBUG] アカウント切り替え要求: ${account.name}`);\n                chrome.runtime.sendMessage({ action: \"load_session\", index }, (response) => {\n                    console.log(\"[DEBUG] Response:\", response);\n                });\n            });\n            accountList.appendChild(button);\n        });\n    });\n    // 現在のアカウントを保存\n    saveButton.addEventListener(\"click\", () => {\n        const accountName = accountNameInput.value.trim();\n        if (!accountName) {\n            console.warn(\"[WARN] アカウント名が空です\");\n            return;\n        }\n        chrome.cookies.getAll({ domain: \".x.com\" }, (cookies) => {\n            console.log(\"[DEBUG] 取得したクッキー:\", cookies);\n            chrome.storage.local.get([\"accounts\"], (data) => {\n                const accounts = data.accounts || [];\n                accounts.push({ name: accountName, cookies });\n                chrome.storage.local.set({ accounts }, () => {\n                    console.log(\"[DEBUG] アカウントが保存されました:\", accounts);\n                    location.reload(); // リストを更新するためにリロード\n                });\n            });\n        });\n    });\n    // エクスポート機能\n    exportButton.addEventListener(\"click\", () => {\n        chrome.storage.local.get([\"accounts\"], (data) => {\n            const json = JSON.stringify(data.accounts, null, 2);\n            const blob = new Blob([json], { type: \"application/json\" });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = \"x_accounts.json\";\n            a.click();\n        });\n    });\n    // インポート機能\n    importButton.addEventListener(\"click\", () => {\n        if (!importFile.files || importFile.files.length === 0)\n            return;\n        const file = importFile.files[0];\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            const json = event.target?.result;\n            try {\n                const accounts = JSON.parse(json);\n                chrome.storage.local.set({ accounts }, () => {\n                    console.log(\"[DEBUG] インポート完了:\", accounts);\n                    location.reload();\n                });\n            }\n            catch (e) {\n                console.error(\"[ERROR] JSONの解析に失敗しました:\", e);\n            }\n        };\n        reader.readAsText(file);\n    });\n});\n"],"names":[],"sourceRoot":""}